name: CI
on:
  workflow_dispatch:
  push:
    branches: main
    paths-ignore:
      - "*.md"
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - ready_for_review
    paths-ignore:
      - "*.md"
  schedule:
    - cron: 0 16 * * 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push'}}

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        pkg:
          - android-sdk-platform-tools
          - aria2
          - blender
          - blender-benchmark
          - calibre
          - cpu-z
          - crystal-disk-info
          - crystal-disk-mark
          - dism-plus-plus
          - everything
          - filezilla
          - furmark
          - hwinfo
          - imagemagick
          - jq
          - libraw
          - mkcert
          - nuget
          - obs-studio
          - openimageio
          - peazip
          - proj
          - pureref
          - rufus
          - sony-camera-remote-sdk
          - termscp
        machine: [windows-latest]
        include:
          - pkg: libraw
            machine: ubuntu-latest
          - pkg: proj
            machine: ubuntu-latest
          # - pkg: sony-camera-remote-sdk
          #   machine: ubuntu-latest
          # - pkg: sony-camera-remote-sdk
          #   machine: macos-latest

    runs-on: ${{matrix.machine}}
    steps:
      - uses: actions/checkout@v4

      - id: changed
        uses: tj-actions/changed-files@v46
        if: ${{github.event_name == 'pull_request' || github.event_name == 'push'}}
        with:
          files: |
            ./packages/${{matrix.pkg}}*/**

      - name: Set up pixi
        if: ${{ steps.changed.outputs.any_changed!= 'false' }}
        uses: prefix-dev/setup-pixi@v0.8.8
        with:
          run-install: false

      - name: login
        if: ${{ steps.changed.outputs.any_changed!= 'false' }}
        run: pixi auth login prefix.dev --token ${{secrets.PREFIX_TOKEN}}
        shell: pwsh

      - name: main
        if: ${{ steps.changed.outputs.any_changed!= 'false' }}
        id: main
        env:
          GH_TOKEN: ${{ github.token }}
        run: ./packages/${{matrix.pkg}}/ci-${{matrix.pkg}}.ps1
        shell: pwsh

      - name: upload
        if: ${{ steps.changed.outputs.any_changed!= 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.pkg}}-${{runner.os}}
          path: ./packages/${{matrix.pkg}}/output

      - name: publish
        if: ${{ steps.main.outputs.update != 'true' && github.event_name != 'pull_request' && github.ref_name=='main'}}
        run: |
          ./scripts/publish.ps1 -pkg ${{matrix.pkg}}
        shell: pwsh

      - name: Create pull request
        if: ${{ steps.main.outputs.update == 'true' && github.event_name != 'pull_request' && !cancelled()}}
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ github.token }}
          commit-message: "chore: update `${{matrix.pkg}}` from `${{ steps.main.outputs.current-version}}` to `${{ steps.main.outputs.latest-version}}`"
          title: "chore: update `${{matrix.pkg}}` from `${{ steps.main.outputs.current-version}}` to `${{ steps.main.outputs.latest-version}}`"
          branch: update-${{matrix.pkg}}
          base: main
          delete-branch: true
          assignees: Glatzel
          draft: true
