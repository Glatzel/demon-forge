name: CI
on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - ready_for_review
    paths-ignore:
      - "*.md"
  schedule:
    - cron: 0 16 * * 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref=='refs/heads/main' && github.sha || github.ref}}
  cancel-in-progress: ${{ github.event_name != 'push'}}

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  changed:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-pkgs.outputs.matrix }}
      all: ${{ steps.all-pkgs.outputs.all }}
    steps:
      - uses: actions/checkout@v5

      - id: change
        if: ${{github.event_name == 'pull_request' || github.event_name == 'push'}}
        uses: tj-actions/changed-files@v47
        with:
          json: true
          files_yaml: |
            android-sdk-platform-tools:
              - ./packages/android-sdk-platform-tools/**
            aria2:
              - ./packages/aria2/**
            audacity:
              - ./packages/audacity/**
            blender:
              - ./packages/blender/**
            blender-benchmark:
              - ./packages/blender-benchmark/**
            calibre:
              - ./packages/calibre/**
            cargo-binutils:
              - ./packages/cargo-binutils/**
            cargo-bloat:
              - ./packages/cargo-bloat/**
            cargo-espflash:
              - ./packages/cargo-espflash/**
            cargo-llvm-lines:
              - ./packages/cargo-llvm-lines/**
            cargo-unused-features:
              - ./packages/cargo-unused-features/**
            cloudflared:
              - ./packages/cloudflared/**
            cpu-z:
              - ./packages/cpu-z/**
            edit:
              - ./packages/edit/**
            esp-generate:
              - ./packages/esp-generate/**
            espflash:
              - ./packages/espflash/**
            dism-plus-plus:
              - ./packages/dism-plus-plus/**
            dufs:
              - ./packages/dufs/**
            filezilla:
              - ./packages/filezilla/**
            furmark:
              - ./packages/furmark/**
            hwinfo:
              - ./packages/hwinfo/**
            imagemagick:
              - ./packages/imagemagick/**
            jq:
              - ./packages/jq/**
            libraw:
              - ./packages/libraw*/**
            librepcb:
              - ./packages/librepcb/**
            nuget:
              - ./packages/nuget/**
            obs-studio:
              - ./packages/obs-studio/**
            openimageio:
              - ./packages/openimageio*/**
            passmark-performance-test:
              - ./packages/passmark-performance-test/**
            peazip:
              - ./packages/peazip/**
            proj:
              - ./packages/proj*/**
            pureref:
              - ./packages/pureref/**
            rufus:
              - ./packages/rufus/**
            slumber:
              - ./packages/slumber/**
            spek:
              - ./packages/spek/**
            sony-camera-remote-sdk:
              - ./packages/sony-camera-remote-sdk/**
            termscp:
              - ./packages/termscp/**
            upx:
              - ./packages/upx/**

      - name: changed-pkgs
        if: ${{github.event_name == 'pull_request'|| github.event_name == 'push'}}
        id: changed-pkgs
        run: |
          RESULT=$(jq -c --argjson pkgs "${{steps.change.outputs.changed_keys}}" '.include | map(select(.pkg as $p | $pkgs | index($p)))' ./pkg_map.json)
          echo "matrix={\"include\":$RESULT}" | tee -a "$GITHUB_OUTPUT"
      - name: all-pkgs
        if: ${{github.event_name != 'pull_request' && github.event_name != 'push'}}
        id: all-pkgs
        run: |
          RESULT=$(jq -c . ./pkg_map.json)
          echo "all=$RESULT"
          echo "all=$RESULT" >> "$GITHUB_OUTPUT"

  rattler-build:
    needs: changed
    strategy:
      fail-fast: false
      matrix: ${{(github.event_name == 'pull_request'|| github.event_name == 'push') && fromJSON(needs.changed.outputs.matrix) ||fromJSON(needs.changed.outputs.all)}}

    runs-on: ${{matrix.machine}}
    steps:
      - uses: actions/checkout@v5

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.9.1
        with:
          run-install: false

      - name: main
        id: main
        env:
          GH_TOKEN: ${{github.token}}
        run: ./packages/${{matrix.pkg}}/ci-${{matrix.pkg}}.ps1
        shell: pwsh

      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.pkg}}-${{matrix.machine}}
          path: ./packages/${{matrix.pkg}}/output

      - name: publish
        if: ${{ steps.main.outputs.update != 'true' && github.event_name != 'pull_request' && github.ref_name=='main'}}
        run: |
          ./scripts/publish.ps1 -pkg ${{matrix.pkg}}
        shell: pwsh

      - name: Create pull request
        if: ${{ steps.main.outputs.update == 'true' && github.event_name != 'pull_request' && !cancelled()}}
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ github.token }}
          commit-message: "chore: update `${{matrix.pkg}}` from `${{ steps.main.outputs.current-version}}` to `${{ steps.main.outputs.latest-version}}`"
          title: "chore: update `${{matrix.pkg}}` from `${{ steps.main.outputs.current-version}}` to `${{ steps.main.outputs.latest-version}}`"
          branch: update-${{matrix.pkg}}
          base: main
          delete-branch: true
          assignees: Glatzel
          draft: true
