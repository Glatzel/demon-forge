name: CI
on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - ready_for_review
    paths-ignore:
      - "*.md"
  schedule:
    - cron: 0 16 * * 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push'}}

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  pre-commit:
    uses: Glatzel/template/.github/workflows/pre-commit.yml@main

  changed:
    runs-on: ubuntu-latest
    outputs:
      changed-pkgs: ${{ steps.changed-pkgs.outputs.changed }}
    steps:
      - uses: actions/checkout@v4

      - id: change
        uses: tj-actions/changed-files@v46
        with:
          json: true
          files_yaml: |
            android-sdk-platform-tools:
              - ./packages/android-sdk-platform-tools*/**
            aria2:
              - ./packages/aria2*/**
            blender:
              - ./packages/blender*/**
            blender-benchmark:
              - ./packages/blender-benchmark*/**
            calibre:
              - ./packages/calibre*/**
            cpu-z:
              - ./packages/cpu-z*/**
            crystal-disk-info:
              - ./packages/crystal-disk-info*/**
            crystal-disk-mark:
              - ./packages/crystal-disk-mark*/**
            edit:
              - ./packages/edit*/**
            dism-plus-plus:
              - ./packages/dism-plus-plus*/**
            everything:
              - ./packages/everything*/**
            filezilla:
              - ./packages/filezilla*/**
            furmark:
              - ./packages/furmark*/**
            hwinfo:
              - ./packages/hwinfo*/**
            imagemagick:
              - ./packages/imagemagick*/**
            jq:
              - ./packages/jq*/**
            libraw:
              - ./packages/libraw*/**
            mkcert:
              - ./packages/mkcert*/**
            nuget:
              - ./packages/nuget*/**
            obs-studio:
              - ./packages/obs-studio*/**
            openimageio:
              - ./packages/openimageio*/**
            peazip:
              - ./packages/peazip*/**
            proj:
              - ./packages/proj*/**
            pureref:
              - ./packages/pureref*/**
            rufus:
              - ./packages/rufus*/**
            slumber:
              - ./packages/slumber*/**
            sony-camera-remote-sdk:
              - ./packages/sony-camera-remote-sdk*/**
            termscp:
              - ./packages/termscp*/**

      - name: changed-pkgs
        id: changed-pkgs
        run: |
          RESULT=$(cat ./pkg_map.json | jq --argjson pkgs "${{steps.change.outputs.changed_keys}}" 'map(select(.pkg as $p | $pkgs | index($p)))')
          echo $RESULT
          echo "changed=${RESULT}" >> "$GITHUB_OUTPUT"

  rattler-build:
    needs: changed
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.changed.outputs.changed-pkgs) }}

    runs-on: ${{matrix.machine}}
    steps:
      - uses: actions/checkout@v4

      - id: changed
        uses: tj-actions/changed-files@v46
        if: ${{github.event_name == 'pull_request' || github.event_name == 'push'}}
        with:
          files: |
            ./packages/${{matrix.pkg}}*/**

      - name: Set up pixi
        if: ${{ steps.changed.outputs.any_changed!= 'false' }}
        uses: prefix-dev/setup-pixi@v0.8.8
        with:
          run-install: false

      - name: main
        if: ${{ steps.changed.outputs.any_changed!= 'false' }}
        id: main
        env:
          GH_TOKEN: ${{github.token}}
        run: ./packages/${{matrix.pkg}}/ci-${{matrix.pkg}}.ps1
        shell: pwsh

      - name: upload
        if: ${{ steps.changed.outputs.any_changed!= 'false' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.pkg}}-${{runner.os}}
          path: ./packages/${{matrix.pkg}}/output

      - name: publish
        if: ${{ steps.main.outputs.update != 'true' && github.event_name != 'pull_request' && github.ref_name=='main'}}
        run: |
          ./scripts/publish.ps1 -pkg ${{matrix.pkg}}
        shell: pwsh

      - name: Create pull request
        if: ${{ steps.main.outputs.update == 'true' && github.event_name != 'pull_request' && !cancelled()}}
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ github.token }}
          commit-message: "chore: update `${{matrix.pkg}}` from `${{ steps.main.outputs.current-version}}` to `${{ steps.main.outputs.latest-version}}`"
          title: "chore: update `${{matrix.pkg}}` from `${{ steps.main.outputs.current-version}}` to `${{ steps.main.outputs.latest-version}}`"
          branch: update-${{matrix.pkg}}
          base: main
          delete-branch: true
          assignees: Glatzel
          draft: true
